State 1 conflicts: 1 shift/reduce
State 2 conflicts: 1 shift/reduce
State 20 conflicts: 2 shift/reduce
State 34 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 98 conflicts: 13 shift/reduce
State 123 conflicts: 12 shift/reduce
State 125 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | lvalue ASSIGN exp
    4    | INT
    5    | STRING
    6    | NIL
    7    | LPAREN RPAREN
    8    | LPAREN exp_seq RPAREN
    9    | MINUS exp
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp TIMES exp
   13    | exp DIVIDE exp
   14    | exp EQ exp
   15    | exp NEQ exp
   16    | exp LT exp
   17    | exp GT exp
   18    | exp LE exp
   19    | exp GE exp
   20    | exp AND exp
   21    | exp OR exp
   22    | ID LPAREN RPAREN
   23    | ID LPAREN arg_seq RPAREN
   24    | ID LBRACK exp RBRACK OF exp
   25    | ID LBRACE RBRACE
   26    | ID LBRACE efield_seq RBRACE
   27    | IF exp THEN exp
   28    | IF exp THEN exp ELSE exp
   29    | WHILE exp DO exp
   30    | FOR ID ASSIGN exp TO exp DO exp
   31    | BREAK
   32    | LET decs IN END
   33    | LET decs IN exp_seq END
   34    | LPAREN error RPAREN
   35    | error SEMICOLON exp
   36    | error

   37 lvalue: ID
   38       | lvalue DOT ID
   39       | lvalue LBRACK exp RBRACK
   40       | ID LBRACK exp RBRACK

   41 exp_seq: exp
   42        | exp SEMICOLON exp_seq

   43 arg_seq: exp
   44        | exp COMMA arg_seq

   45 efield_seq: ID EQ exp
   46           | ID EQ exp COMMA efield_seq

   47 decs: dec decs
   48     | /* empty */
   49     | error decs

   50 dec: tydecs
   51    | vardec
   52    | fundecs

   53 tydecs: tydec
   54       | tydec tydecs

   55 tydec: TYPE ID EQ ty

   56 ty: ID
   57   | LBRACE fields RBRACE
   58   | ARRAY OF ID

   59 fields: field
   60       | /* empty */

   61 field: ID COLON ID
   62      | ID COLON ID COMMA field

   63 vardec: VAR ID ASSIGN exp
   64       | VAR ID COLON ID ASSIGN exp

   65 fundecs: fundec
   66        | fundec fundecs

   67 fundec: FUNCTION ID LPAREN fields RPAREN EQ exp
   68       | FUNCTION ID LPAREN fields RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256) 34 35 36 49
ID (258) 22 23 24 25 26 30 37 38 40 45 46 55 56 58 61 62 63 64 67 68
STRING (259) 5
INT (260) 4
COMMA (261) 44 46 62
COLON (262) 61 62 64 68
LPAREN (263) 7 8 22 23 34 67 68
RPAREN (264) 7 8 22 23 34 67 68
LBRACK (265) 24 39 40
RBRACK (266) 24 39 40
LBRACE (267) 25 26 57
RBRACE (268) 25 26 57
DOT (269) 38
ARRAY (270) 58
IF (271) 27 28
THEN (272) 27 28
ELSE (273) 28
WHILE (274) 29
FOR (275) 30
TO (276) 30
LET (277) 32 33
IN (278) 32 33
END (279) 32 33
OF (280) 24 58
BREAK (281) 31
NIL (282) 6
FUNCTION (283) 67 68
VAR (284) 63 64
TYPE (285) 55
SEMICOLON (286) 35 42
DO (287) 29 30
ASSIGN (288) 3 30 63 64
OR (289) 21
AND (290) 20
GE (291) 19
GT (292) 17
LE (293) 18
LT (294) 16
NEQ (295) 15
EQ (296) 14 45 46 55 67 68
MINUS (297) 9 11
PLUS (298) 10
DIVIDE (299) 13
TIMES (300) 12
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33 34 35 36, on right: 1 3 9 10 11
    12 13 14 15 16 17 18 19 20 21 24 27 28 29 30 35 39 40 41 42 43
    44 45 46 63 64 67 68
lvalue (50)
    on left: 37 38 39 40, on right: 2 3 38 39
exp_seq (51)
    on left: 41 42, on right: 8 33 42
arg_seq (52)
    on left: 43 44, on right: 23 44
efield_seq (53)
    on left: 45 46, on right: 26 46
decs (54)
    on left: 47 48 49, on right: 32 33 47 49
dec (55)
    on left: 50 51 52, on right: 47
tydecs (56)
    on left: 53 54, on right: 50 54
tydec (57)
    on left: 55, on right: 53 54
ty (58)
    on left: 56 57 58, on right: 55
fields (59)
    on left: 59 60, on right: 57 67 68
field (60)
    on left: 61 62, on right: 59 62
vardec (61)
    on left: 63 64, on right: 51
fundecs (62)
    on left: 65 66, on right: 52 66
fundec (63)
    on left: 67 68, on right: 65 66


state 0

    0 $accept: . program $end

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    program  go to state 13
    exp      go to state 14
    lvalue   go to state 15


state 1

   35 exp: error . SEMICOLON exp
   36    | error .

    SEMICOLON  shift, and go to state 16

    SEMICOLON  [reduce using rule 36 (exp)]
    $default   reduce using rule 36 (exp)


state 2

   22 exp: ID . LPAREN RPAREN
   23    | ID . LPAREN arg_seq RPAREN
   24    | ID . LBRACK exp RBRACK OF exp
   25    | ID . LBRACE RBRACE
   26    | ID . LBRACE efield_seq RBRACE
   37 lvalue: ID .
   40       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19

    LBRACK    [reduce using rule 37 (lvalue)]
    $default  reduce using rule 37 (lvalue)


state 3

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


state 4

    4 exp: INT .

    $default  reduce using rule 4 (exp)


state 5

    7 exp: LPAREN . RPAREN
    8    | LPAREN . exp_seq RPAREN
   34    | LPAREN . error RPAREN

    error   shift, and go to state 20
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 21
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp      go to state 22
    lvalue   go to state 15
    exp_seq  go to state 23


state 6

   27 exp: IF . exp THEN exp
   28    | IF . exp THEN exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 24
    lvalue  go to state 15


state 7

   29 exp: WHILE . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 25
    lvalue  go to state 15


state 8

   30 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 26


state 9

   32 exp: LET . decs IN END
   33    | LET . decs IN exp_seq END

    error     shift, and go to state 27
    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    IN  reduce using rule 48 (decs)

    decs     go to state 31
    dec      go to state 32
    tydecs   go to state 33
    tydec    go to state 34
    vardec   go to state 35
    fundecs  go to state 36
    fundec   go to state 37


state 10

   31 exp: BREAK .

    $default  reduce using rule 31 (exp)


state 11

    6 exp: NIL .

    $default  reduce using rule 6 (exp)


state 12

    9 exp: MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 38
    lvalue  go to state 15


state 13

    0 $accept: program . $end

    $end  shift, and go to state 39


state 14

    1 program: exp .
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 1 (program)


state 15

    2 exp: lvalue .
    3    | lvalue . ASSIGN exp
   38 lvalue: lvalue . DOT ID
   39       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 52
    DOT     shift, and go to state 53
    ASSIGN  shift, and go to state 54

    $default  reduce using rule 2 (exp)


state 16

   35 exp: error SEMICOLON . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 55
    lvalue  go to state 15


state 17

   22 exp: ID LPAREN . RPAREN
   23    | ID LPAREN . arg_seq RPAREN

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 56
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp      go to state 57
    lvalue   go to state 15
    arg_seq  go to state 58


state 18

   24 exp: ID LBRACK . exp RBRACK OF exp
   40 lvalue: ID LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 59
    lvalue  go to state 15


state 19

   25 exp: ID LBRACE . RBRACE
   26    | ID LBRACE . efield_seq RBRACE

    ID      shift, and go to state 60
    RBRACE  shift, and go to state 61

    efield_seq  go to state 62


state 20

   34 exp: LPAREN error . RPAREN
   35    | error . SEMICOLON exp
   36    | error .

    RPAREN     shift, and go to state 63
    SEMICOLON  shift, and go to state 16

    RPAREN     [reduce using rule 36 (exp)]
    SEMICOLON  [reduce using rule 36 (exp)]
    $default   reduce using rule 36 (exp)


state 21

    7 exp: LPAREN RPAREN .

    $default  reduce using rule 7 (exp)


state 22

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   41 exp_seq: exp .
   42        | exp . SEMICOLON exp_seq

    SEMICOLON  shift, and go to state 64
    OR         shift, and go to state 40
    AND        shift, and go to state 41
    GE         shift, and go to state 42
    GT         shift, and go to state 43
    LE         shift, and go to state 44
    LT         shift, and go to state 45
    NEQ        shift, and go to state 46
    EQ         shift, and go to state 47
    MINUS      shift, and go to state 48
    PLUS       shift, and go to state 49
    DIVIDE     shift, and go to state 50
    TIMES      shift, and go to state 51

    $default  reduce using rule 41 (exp_seq)


state 23

    8 exp: LPAREN exp_seq . RPAREN

    RPAREN  shift, and go to state 65


state 24

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   27    | IF exp . THEN exp
   28    | IF exp . THEN exp ELSE exp

    THEN    shift, and go to state 66
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51


state 25

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   29    | WHILE exp . DO exp

    DO      shift, and go to state 67
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51


state 26

   30 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 68


state 27

   49 decs: error . decs

    error     shift, and go to state 27
    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    IN  reduce using rule 48 (decs)

    decs     go to state 69
    dec      go to state 32
    tydecs   go to state 33
    tydec    go to state 34
    vardec   go to state 35
    fundecs  go to state 36
    fundec   go to state 37


state 28

   67 fundec: FUNCTION . ID LPAREN fields RPAREN EQ exp
   68       | FUNCTION . ID LPAREN fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 70


state 29

   63 vardec: VAR . ID ASSIGN exp
   64       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 71


state 30

   55 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 72


state 31

   32 exp: LET decs . IN END
   33    | LET decs . IN exp_seq END

    IN  shift, and go to state 73


state 32

   47 decs: dec . decs

    error     shift, and go to state 27
    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    IN  reduce using rule 48 (decs)

    decs     go to state 74
    dec      go to state 32
    tydecs   go to state 33
    tydec    go to state 34
    vardec   go to state 35
    fundecs  go to state 36
    fundec   go to state 37


state 33

   50 dec: tydecs .

    $default  reduce using rule 50 (dec)


state 34

   53 tydecs: tydec .
   54       | tydec . tydecs

    TYPE  shift, and go to state 30

    TYPE      [reduce using rule 53 (tydecs)]
    $default  reduce using rule 53 (tydecs)

    tydecs  go to state 75
    tydec   go to state 34


state 35

   51 dec: vardec .

    $default  reduce using rule 51 (dec)


state 36

   52 dec: fundecs .

    $default  reduce using rule 52 (dec)


state 37

   65 fundecs: fundec .
   66        | fundec . fundecs

    FUNCTION  shift, and go to state 28

    FUNCTION  [reduce using rule 65 (fundecs)]
    $default  reduce using rule 65 (fundecs)

    fundecs  go to state 76
    fundec   go to state 37


state 38

    9 exp: MINUS exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 9 (exp)


state 39

    0 $accept: program $end .

    $default  accept


state 40

   21 exp: exp OR . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 77
    lvalue  go to state 15


state 41

   20 exp: exp AND . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 78
    lvalue  go to state 15


state 42

   19 exp: exp GE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 79
    lvalue  go to state 15


state 43

   17 exp: exp GT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 80
    lvalue  go to state 15


state 44

   18 exp: exp LE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 81
    lvalue  go to state 15


state 45

   16 exp: exp LT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 82
    lvalue  go to state 15


state 46

   15 exp: exp NEQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 83
    lvalue  go to state 15


state 47

   14 exp: exp EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 84
    lvalue  go to state 15


state 48

   11 exp: exp MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 85
    lvalue  go to state 15


state 49

   10 exp: exp PLUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 86
    lvalue  go to state 15


state 50

   13 exp: exp DIVIDE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 87
    lvalue  go to state 15


state 51

   12 exp: exp TIMES . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 88
    lvalue  go to state 15


state 52

   39 lvalue: lvalue LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 89
    lvalue  go to state 15


state 53

   38 lvalue: lvalue DOT . ID

    ID  shift, and go to state 90


state 54

    3 exp: lvalue ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 91
    lvalue  go to state 15


state 55

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   35    | error SEMICOLON exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 35 (exp)


state 56

   22 exp: ID LPAREN RPAREN .

    $default  reduce using rule 22 (exp)


state 57

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   43 arg_seq: exp .
   44        | exp . COMMA arg_seq

    COMMA   shift, and go to state 92
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 43 (arg_seq)


state 58

   23 exp: ID LPAREN arg_seq . RPAREN

    RPAREN  shift, and go to state 93


state 59

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   24    | ID LBRACK exp . RBRACK OF exp
   40 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 94
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51


state 60

   45 efield_seq: ID . EQ exp
   46           | ID . EQ exp COMMA efield_seq

    EQ  shift, and go to state 95


state 61

   25 exp: ID LBRACE RBRACE .

    $default  reduce using rule 25 (exp)


state 62

   26 exp: ID LBRACE efield_seq . RBRACE

    RBRACE  shift, and go to state 96


state 63

   34 exp: LPAREN error RPAREN .

    $default  reduce using rule 34 (exp)


state 64

   42 exp_seq: exp SEMICOLON . exp_seq

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp      go to state 22
    lvalue   go to state 15
    exp_seq  go to state 97


state 65

    8 exp: LPAREN exp_seq RPAREN .

    $default  reduce using rule 8 (exp)


state 66

   27 exp: IF exp THEN . exp
   28    | IF exp THEN . exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 98
    lvalue  go to state 15


state 67

   29 exp: WHILE exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 99
    lvalue  go to state 15


state 68

   30 exp: FOR ID ASSIGN . exp TO exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 100
    lvalue  go to state 15


state 69

   49 decs: error decs .

    $default  reduce using rule 49 (decs)


state 70

   67 fundec: FUNCTION ID . LPAREN fields RPAREN EQ exp
   68       | FUNCTION ID . LPAREN fields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 101


state 71

   63 vardec: VAR ID . ASSIGN exp
   64       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 102
    ASSIGN  shift, and go to state 103


state 72

   55 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 104


state 73

   32 exp: LET decs IN . END
   33    | LET decs IN . exp_seq END

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    END     shift, and go to state 105
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp      go to state 22
    lvalue   go to state 15
    exp_seq  go to state 106


state 74

   47 decs: dec decs .

    $default  reduce using rule 47 (decs)


state 75

   54 tydecs: tydec tydecs .

    $default  reduce using rule 54 (tydecs)


state 76

   66 fundecs: fundec fundecs .

    $default  reduce using rule 66 (fundecs)


state 77

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   21    | exp OR exp .

    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 21 (exp)


state 78

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   20    | exp AND exp .
   21    | exp . OR exp

    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 20 (exp)


state 79

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   19    | exp GE exp .
   20    | exp . AND exp
   21    | exp . OR exp

    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 19 (exp)


state 80

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 81

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   18    | exp LE exp .
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 82

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   16    | exp LT exp .
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 83

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   15    | exp NEQ exp .
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 15 (exp)


state 84

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   14    | exp EQ exp .
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 85

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 11 (exp)


state 86

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 10 (exp)


state 87

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   13    | exp DIVIDE exp .
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 13 (exp)


state 88

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   12    | exp TIMES exp .
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 12 (exp)


state 89

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   39 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 107
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51


state 90

   38 lvalue: lvalue DOT ID .

    $default  reduce using rule 38 (lvalue)


state 91

    3 exp: lvalue ASSIGN exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 3 (exp)


state 92

   44 arg_seq: exp COMMA . arg_seq

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp      go to state 57
    lvalue   go to state 15
    arg_seq  go to state 108


state 93

   23 exp: ID LPAREN arg_seq RPAREN .

    $default  reduce using rule 23 (exp)


state 94

   24 exp: ID LBRACK exp RBRACK . OF exp
   40 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 109

    $default  reduce using rule 40 (lvalue)


state 95

   45 efield_seq: ID EQ . exp
   46           | ID EQ . exp COMMA efield_seq

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 110
    lvalue  go to state 15


state 96

   26 exp: ID LBRACE efield_seq RBRACE .

    $default  reduce using rule 26 (exp)


state 97

   42 exp_seq: exp SEMICOLON exp_seq .

    $default  reduce using rule 42 (exp_seq)


state 98

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   27    | IF exp THEN exp .
   28    | IF exp THEN exp . ELSE exp

    ELSE    shift, and go to state 111
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    ELSE      [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    PLUS      [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


state 99

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   29    | WHILE exp DO exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 29 (exp)


state 100

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   30    | FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 112
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51


state 101

   67 fundec: FUNCTION ID LPAREN . fields RPAREN EQ exp
   68       | FUNCTION ID LPAREN . fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 113

    $default  reduce using rule 60 (fields)

    fields  go to state 114
    field   go to state 115


state 102

   64 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 116


state 103

   63 vardec: VAR ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 117
    lvalue  go to state 15


state 104

   55 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 118
    LBRACE  shift, and go to state 119
    ARRAY   shift, and go to state 120

    ty  go to state 121


state 105

   32 exp: LET decs IN END .

    $default  reduce using rule 32 (exp)


state 106

   33 exp: LET decs IN exp_seq . END

    END  shift, and go to state 122


state 107

   39 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 39 (lvalue)


state 108

   44 arg_seq: exp COMMA arg_seq .

    $default  reduce using rule 44 (arg_seq)


state 109

   24 exp: ID LBRACK exp RBRACK OF . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 123
    lvalue  go to state 15


state 110

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   45 efield_seq: ID EQ exp .
   46           | ID EQ exp . COMMA efield_seq

    COMMA   shift, and go to state 124
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 45 (efield_seq)


state 111

   28 exp: IF exp THEN exp ELSE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 125
    lvalue  go to state 15


state 112

   30 exp: FOR ID ASSIGN exp TO . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 126
    lvalue  go to state 15


state 113

   61 field: ID . COLON ID
   62      | ID . COLON ID COMMA field

    COLON  shift, and go to state 127


state 114

   67 fundec: FUNCTION ID LPAREN fields . RPAREN EQ exp
   68       | FUNCTION ID LPAREN fields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 128


state 115

   59 fields: field .

    $default  reduce using rule 59 (fields)


state 116

   64 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 129


state 117

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   63 vardec: VAR ID ASSIGN exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 63 (vardec)


state 118

   56 ty: ID .

    $default  reduce using rule 56 (ty)


state 119

   57 ty: LBRACE . fields RBRACE

    ID  shift, and go to state 113

    $default  reduce using rule 60 (fields)

    fields  go to state 130
    field   go to state 115


state 120

   58 ty: ARRAY . OF ID

    OF  shift, and go to state 131


state 121

   55 tydec: TYPE ID EQ ty .

    $default  reduce using rule 55 (tydec)


state 122

   33 exp: LET decs IN exp_seq END .

    $default  reduce using rule 33 (exp)


state 123

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   24    | ID LBRACK exp RBRACK OF exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    OR        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    PLUS      [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


state 124

   46 efield_seq: ID EQ exp COMMA . efield_seq

    ID  shift, and go to state 60

    efield_seq  go to state 132


state 125

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   28    | IF exp THEN exp ELSE exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    OR        [reduce using rule 28 (exp)]
    AND       [reduce using rule 28 (exp)]
    GE        [reduce using rule 28 (exp)]
    GT        [reduce using rule 28 (exp)]
    LE        [reduce using rule 28 (exp)]
    LT        [reduce using rule 28 (exp)]
    NEQ       [reduce using rule 28 (exp)]
    EQ        [reduce using rule 28 (exp)]
    MINUS     [reduce using rule 28 (exp)]
    PLUS      [reduce using rule 28 (exp)]
    DIVIDE    [reduce using rule 28 (exp)]
    TIMES     [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


state 126

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   30    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 133
    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51


state 127

   61 field: ID COLON . ID
   62      | ID COLON . ID COMMA field

    ID  shift, and go to state 134


state 128

   67 fundec: FUNCTION ID LPAREN fields RPAREN . EQ exp
   68       | FUNCTION ID LPAREN fields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 135
    EQ     shift, and go to state 136


state 129

   64 vardec: VAR ID COLON ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 137
    lvalue  go to state 15


state 130

   57 ty: LBRACE fields . RBRACE

    RBRACE  shift, and go to state 138


state 131

   58 ty: ARRAY OF . ID

    ID  shift, and go to state 139


state 132

   46 efield_seq: ID EQ exp COMMA efield_seq .

    $default  reduce using rule 46 (efield_seq)


state 133

   30 exp: FOR ID ASSIGN exp TO exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 140
    lvalue  go to state 15


state 134

   61 field: ID COLON ID .
   62      | ID COLON ID . COMMA field

    COMMA  shift, and go to state 141

    $default  reduce using rule 61 (field)


state 135

   68 fundec: FUNCTION ID LPAREN fields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 142


state 136

   67 fundec: FUNCTION ID LPAREN fields RPAREN EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 143
    lvalue  go to state 15


state 137

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   64 vardec: VAR ID COLON ID ASSIGN exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 64 (vardec)


state 138

   57 ty: LBRACE fields RBRACE .

    $default  reduce using rule 57 (ty)


state 139

   58 ty: ARRAY OF ID .

    $default  reduce using rule 58 (ty)


state 140

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   30    | FOR ID ASSIGN exp TO exp DO exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 30 (exp)


state 141

   62 field: ID COLON ID COMMA . field

    ID  shift, and go to state 113

    field  go to state 144


state 142

   68 fundec: FUNCTION ID LPAREN fields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 145


state 143

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   67 fundec: FUNCTION ID LPAREN fields RPAREN EQ exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 67 (fundec)


state 144

   62 field: ID COLON ID COMMA field .

    $default  reduce using rule 62 (field)


state 145

   68 fundec: FUNCTION ID LPAREN fields RPAREN COLON ID EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp     go to state 146
    lvalue  go to state 15


state 146

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   68 fundec: FUNCTION ID LPAREN fields RPAREN COLON ID EQ exp .

    OR      shift, and go to state 40
    AND     shift, and go to state 41
    GE      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    LT      shift, and go to state 45
    NEQ     shift, and go to state 46
    EQ      shift, and go to state 47
    MINUS   shift, and go to state 48
    PLUS    shift, and go to state 49
    DIVIDE  shift, and go to state 50
    TIMES   shift, and go to state 51

    $default  reduce using rule 68 (fundec)
